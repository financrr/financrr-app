services:
  rust:
    image: ghcr.io/financrr/backend-dev:latest
    build:
      context: .
      dockerfile: dev.Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    tty: true
    stdin_open: true
    ports:
      - "8080:8080"
      - "63342:63342"
    environment:
      TZ: ${TZ}
    volumes:
      - ./:/home/financrr/app
      - cargo-registry:/home/financrr/.cargo/registry
      - cargo-git:/home/financrr/.cargo/git
      - cargo-global-registry:/usr/local/cargo/registry
      - cargo-advisory-db:/home/financrr/.cargo/advisory-db

  db:
    image: postgres:17.5-alpine3.21
    init: true
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  opensearch:
    image: opensearchproject/opensearch:2
    init: true
    environment:
      TZ: ${TZ}
      discovery.type: single-node
      bootstrap.memory_lock: true # Disable JVM heap memory swapping
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx8192m" # Set min and max JVM heap sizes to at least 50% of system RAM
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_PASSWORD}
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -k -u admin:${OPENSEARCH_PASSWORD} --silent --fail https://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    init: true
    ports:
      - "127.0.0.1:5601:5601" # Map host port 5601 to container port 5601
    environment:
      TZ: ${TZ}
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
    depends_on:
      opensearch:
        condition: service_healthy

  mailpit:
    image: axllent/mailpit:latest
    init: true
    volumes:
      - mailpit-data:/data
    ports:
      - "127.0.0.1:8025:8025"
    environment:
      TZ: ${TZ}
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8025/readyz" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data: ~
  opensearch-data: ~
  mailpit-data: ~
  # Rust cargo cache
  cargo-registry: ~
  cargo-git: ~
  cargo-global-registry: ~
  cargo-advisory-db: ~
