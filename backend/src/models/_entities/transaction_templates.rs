//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use super::sea_orm_active_enums::TransactionType;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "transaction_templates")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub source_id: Option<i64>,
    pub destination_id: Option<i64>,
    pub currency_id: i64,
    pub category_id: Option<i64>,
    pub file_attachment_id: Option<i64>,
    #[sea_orm(column_type = "Text", nullable)]
    pub source_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub source_iban: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub destination_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub destination_iban: Option<String>,
    pub r#type: TransactionType,
    pub amount: i64,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub purpose: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub note: Option<String>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::categories::Entity",
        from = "Column::CategoryId",
        to = "super::categories::Column::Id",
        on_update = "SetNull",
        on_delete = "SetNull"
    )]
    Categories,
    #[sea_orm(
        belongs_to = "super::currencies::Entity",
        from = "Column::CurrencyId",
        to = "super::currencies::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Currencies,
    #[sea_orm(
        belongs_to = "super::file_attachments::Entity",
        from = "Column::FileAttachmentId",
        to = "super::file_attachments::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    FileAttachments,
    #[sea_orm(
        belongs_to = "super::transaction_parties::Entity",
        from = "Column::DestinationId",
        to = "super::transaction_parties::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TransactionParties2,
    #[sea_orm(
        belongs_to = "super::transaction_parties::Entity",
        from = "Column::SourceId",
        to = "super::transaction_parties::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TransactionParties1,
}

impl Related<super::categories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Categories.def()
    }
}

impl Related<super::currencies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Currencies.def()
    }
}

impl Related<super::file_attachments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FileAttachments.def()
    }
}
